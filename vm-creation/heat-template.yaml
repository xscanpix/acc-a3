heat_template_version: 2013-05-23

description: Hot Template to start a stack

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: "Ubuntu 16.04 LTS (Xenial Xerus) - latest"
  flavor: 
    type: string
    label: Flavor
    description: The flavor to be used
    default: "ACCHT18.normal"
  key:
    type: string
    label: Key name
    description: Name of key-pair
    default: 2svni7746
  public_network:
    type: string
    label: Public network name or ID
    description: Public for floating ips
    default: "Public External IPv4 network"

resources:
  cluster_sg:
    type: OS::Neutron::SecurityGroup
    properties: 
      name: svni_cluster_sg
      description: SSH
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
  
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties: 
      floating_network: { get_param: public_network }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: instance_port0 }

  instance_port0:
    type: OS::Neutron::Port
    properties: 
      network: { get_resource: private_network }
      security_groups: { get_resource: cluster_sg }

  instance_port1:
    type: OS::Neutron::Port
    properties: 
      network: { get_resource: private_network }
      security_groups: { get_resource: cluster_sg }

  my_instance0:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups:
      - { get_resource: cluster_sg }
      networks:
        - port: { get_param: instance_port0 }
      user_data_format: SOFTWARE_CONFIG
  
  my_instance0:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups:
      - { get_resource: cluster_sg }
      networks:
        - port: { get_param: instance_port1 }
      user_data_format: SOFTWARE_CONFIG

  private_network:
    type: OS::Neutron::Net
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.10.10.0/24
      network_id: { get_resource: private_network }

  router: 
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

outputs:
  instance_ip0:
    description: IP address of the instance0
    value:
      get_attr: [my_instance0, first_address, floating_ip, floating_ip_address]
  instance_name0:
    description: Name of the instance0
    value:
      get_attr: [my_instance0, name]
  instance_ip1:
    description: IP address of the instance1
    value:
      get_attr: [my_instance1, first_address, floating_ip, floating_ip_address]
  instance_name1:
    description: Name of the instance1
    value:
      get_attr: [my_instance1, name]
