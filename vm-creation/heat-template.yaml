heat_template_version: 2013-05-23

description: Hot Template to start a stack

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: "Ubuntu 16.04 LTS (Xenial Xerus) - latest"
  flavor: 
    type: string
    label: Flavor
    description: The flavor to be used
    default: "ACCHT18.normal"
  key:
    type: string
    label: Key name
    description: Name of key-pair
    default: 2svni7746
  public_network:
    type: string
    label: Public network name or ID
    description: Public for floating ips
    default: "Public External IPv4 network"

resources:
  cluster_sg:
    type: OS::Neutron::SecurityGroup
    properties: 
      name: svni_cluster_sg
      description: SSH
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
  
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties: 
      floating_network: { get_param: public_network }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: master_port }

  router: 
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_network }

  private_network:
    type: OS::Neutron::Net

  private_subnetwork:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.10.10.0/24
      network_id: { get_resource: private_network }

  master_port:
    type: OS::Neutron::Port
    network: { get_resource: private_network }
    security_groups:
    - { get_resource: cluster_sg }

  master_server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
      - port: { get_resource: master_port }
      - network: { get_resource: private_subnetwork }
      user_data_format: SOFTWARE_CONFIG
  
  slave_server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        network: { get_resource: private_subnetwork }
      user_data_format: SOFTWARE_CONFIG

outputs:
  master_ip:
    description: IP addresses of the master server
    value:
      get_attr: [master_server, first_address, floating_ip, floating_ip_address]
  master_name:
    description: Name of the master server
    value:
      get_attr: [master_server, name]
  slave_ip:
    description: IP addresses of the instance1
    value:
      get_attr: [slave_server, first_address, floating_ip, floating_ip_address]
  slave_name:
    description: Name of the slave server
    value:
      get_attr: [slave_server, name]
